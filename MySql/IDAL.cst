<%@ CodeTemplate Language="C#" TargetLanguage="C#" Inherits="CodeSmith.BaseTemplates.OutputFileCodeTemplate" ResponseEncoding="utf-8" Description="Generates a very simple business object." %>
<%@ Property Name="NameSpace" Type="String" Category="Context" Default="Com.Sy" Description="The namespace to use for this class" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the object is based on." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.IO" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="System.Windows.Forms.Design"%>
<%@ Assembly Name="System.Design" %>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace <%= NameSpace %>.IDAL
{
    public interface I<%=GetClassName(SourceTable)%>DAL: IBaseDAL<string, <%=GetClassName(SourceTable)%>>
    {
    }
}

<script runat="template">
public string GetClassName(TableSchema table)
{
	
	if(table==null)
	{
	    return null;
	}
	return table.Name.Substring(0, 1).ToUpper() + table.Name.Substring(1);
}
</script>